steps:
  # decrypt environment variables
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - decrypt
      - --ciphertext-file=env/.env.$BRANCH_NAME.enc
      - --plaintext-file=.env
      - --location=global
      - --keyring=chess-wager
      - --key=chess-wager-$BRANCH_NAME

  # Install
  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--no-optional", "-f"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "-g", "firebase-tools"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save", "firebase"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save-dev", "hardhat"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "postinstall"]

  # Hardhat deploy contract
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "deploy-contract"]

  # Test
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "test", "--", "--watchAll=false"]

  # k8s build
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - "-t"
      - "$_IMAGE_NAME:$COMMIT_SHA"
      - .
      - "-f"
      - $_DOCKERFILE_NAME
    dir: $_DOCKERFILE_DIR
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "$_IMAGE_NAME:$COMMIT_SHA"
    id: Push
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      - prepare
      - "--filename=$_K8S_YAML_PATH"
      - "--image=$_IMAGE_NAME:$COMMIT_SHA"
      - "--app=$_K8S_APP_NAME"
      - "--version=$COMMIT_SHA"
      - "--namespace=$_K8S_NAMESPACE"
      - "--label=$_K8S_LABELS"
      - "--annotation=$_K8S_ANNOTATIONS,gcb-build-id=$BUILD_ID"
      - "--create-application-cr"
      - >-
        --links="Build
        details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
      - "--output=output"
    id: Prepare deploy
  - name: gcr.io/cloud-builders/gsutil
    args:
      - "-c"
      - |-
        if [ "$_OUTPUT_BUCKET_PATH" != "" ]
        then
          gsutil cp -r output/suggested gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/suggested
          gsutil cp -r output/expanded gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/expanded
        fi
    id: Save configs
    entrypoint: sh
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      - apply
      - "--filename=output/expanded"
      - "--cluster=$_GKE_CLUSTER"
      - "--location=$_GKE_LOCATION"
      - "--namespace=$_K8S_NAMESPACE"
    id: Apply deploy

  # Build frontend
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "build"]

  # Firebase env selection
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["use", "$BRANCH_NAME"]

  # Deploy
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["deploy", "--project=$PROJECT_ID"]

  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["run", "deploy"]
timeout: 1800s
images:
  - "$_IMAGE_NAME:$COMMIT_SHA"
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _K8S_NAMESPACE: default
  _DOCKERFILE_NAME: Dockerfile
  _GKE_LOCATION: us-central1-a
  _K8S_ANNOTATIONS: gcb-trigger-id=70b1c8e5-0573-46cc-80d2-99cbe4d2d1a9
  _K8S_LABELS: ""
  _OUTPUT_BUCKET_PATH: chess-wager-main_cloudbuild/deploy
  _GKE_CLUSTER: chess-wager-main-env
  _K8S_YAML_PATH: kubernetes/deployment.main.yaml
  _IMAGE_NAME: gcr.io/chess-wager-main/github.com/geektechniquestudios/chesswager
  _K8S_APP_NAME: chess-wager-backend-server
  _DOCKERFILE_DIR: ""
tags:
  - gcp-cloud-build-deploy
  - $_K8S_APP_NAME
