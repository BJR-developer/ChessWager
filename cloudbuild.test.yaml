steps:
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - decrypt
      - --ciphertext-file=env/.env.$BRANCH_NAME.enc
      - --plaintext-file=.env
      - --location=global
      - --keyring=chess-wager
      - --key=chess-wager-$BRANCH_NAME
    id: Decrypting environment variables
  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--no-optional", "-f"]
    id: Installing dependencies for frontend
  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "-g", "firebase-tools"]
    id: Installing firebase tools
  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save", "firebase"]
    id: Installing firebase
  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save-dev", "hardhat"]
    id: Installing hardhat
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "functions-install"]
    id: Running postinstall
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "test", "--", "--watchAll=false"]
    id: Running tests
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "deploy-contract-$BRANCH_NAME"]
    id: Deploying contract
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - "-t"
      - "$_IMAGE_NAME:$COMMIT_SHA"
      - .
      - "-f"
      - $_DOCKERFILE_NAME
    dir: $_DOCKERFILE_DIR
    id: Building backend docker image
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "$_IMAGE_NAME:$COMMIT_SHA"
    id: Pushing backend docker image
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      - prepare
      - "--filename=$_K8S_YAML_PATH"
      - "--image=$_IMAGE_NAME:$COMMIT_SHA"
      - "--app=$_K8S_APP_NAME"
      - "--version=$COMMIT_SHA"
      - "--namespace=$_K8S_NAMESPACE"
      - "--label=$_K8S_LABELS"
      - "--annotation=$_K8S_ANNOTATIONS,gcb-build-id=$BUILD_ID"
      - "--create-application-cr"
      - >-
        --links="Build
        details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
      - "--output=output"
    id: Preparing deploy of docker image to kubernetes
  - name: gcr.io/cloud-builders/gsutil
    args:
      - "-c"
      - |-
        if [ "$_OUTPUT_BUCKET_PATH" != "" ]
        then
          gsutil cp -r output/suggested gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/suggested
          gsutil cp -r output/expanded gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/expanded
        fi
    id: Saving configuration for kuberenets
    entrypoint: sh
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      - apply
      - "--filename=output/expanded"
      - "--cluster=$_GKE_CLUSTER"
      - "--location=$_GKE_LOCATION"
      - "--namespace=$_K8S_NAMESPACE"
    id: Appling deployment to kubernetes
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "build"]
    id: Building frontend
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["use", "$BRANCH_NAME"]
    id: Selecting firebase env
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["deploy", "--project=$PROJECT_ID"]
    id: Deploying to firebase
timeout: 1800s
images:
  - "$_IMAGE_NAME:$COMMIT_SHA"
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _GKE_LOCATION: us-central1-a
  _OUTPUT_BUCKET_PATH: chess-wager-test_cloudbuild/deploy
  _K8S_APP_NAME: chess-wager-backend-server
  _K8S_YAML_PATH: kubernetes/deployment.test.yaml
  _K8S_LABELS: ""
  _K8S_NAMESPACE: default
  _GKE_CLUSTER: chess-wager-test-env
  _DOCKERFILE_NAME: Dockerfile
  _DOCKERFILE_DIR: ""
  _IMAGE_NAME: gcr.io/chess-wager-test/github.com/geektechniquestudios/chesswager
  _K8S_ANNOTATIONS: gcb-trigger-id=cadc893d-609c-495e-af19-81e9da53cdf0
tags:
  - gcp-cloud-build-deploy
  - $_K8S_APP_NAME
