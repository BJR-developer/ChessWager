steps:
  # decrypt environment variables
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - decrypt
      - --ciphertext-file=env/.env.$BRANCH_NAME.enc
      - --plaintext-file=.env
      - --location=global
      - --keyring=chess-wager
      - --key=chess-wager-$BRANCH_NAME

  # # Install
  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["install", "--no-optional", "-f"]

  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["install", "-g", "firebase-tools"]

  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["install", "--save", "firebase"]

  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["install", "--save-dev", "hardhat"]

  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["run", "postinstall"]

  # # Hardhat deploy contract
  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["run", "deploy-contract"]

  # Build backend docker image

  # Need to figure out how to deploy docker image to gke

  # Should deploy to gce
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args: ["app", "deploy"]

  # Deploy to app engine
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: 'bash'
  #   args: ['-c', 'gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy']

  # # Build backend docker image
  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["build", "-t", "gcr.io/$PROJECT_ID/backend-server:$SHORT_SHA", "."]

  # # Push backend image
  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["push", "gcr.io/$PROJECT_ID/backend-server:$SHORT_SHA"]

  # #Deploy container image to GKE
  # - name: "gcr.io/cloud-builders/gke-deploy"
  #   args:
  #     - run
  #     - --filename=kubernetes/deployment.yaml
  #     - --image=gcr.io/$PROJECT_ID/backend-server:$SHORT_SHA
  #     - --location=us-central1-a
  #     - --cluster=chess-wager-$BRANCH_NAME

  # Build docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/github.com/geektechniquestudios/chesswager:$SHORT_SHA",
        ".",
      ]

  # Push docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "gcr.io/$PROJECT_ID/github.com/geektechniquestudios/chesswager:$SHORT_SHA",
      ]

  # Prepare gke deploy
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      --annotation=gcb-trigger-id=cadc893d-609c-495e-af19-81e9da53cdf0,gcb-build-id=3f086b33-4154-4b78-b122-17992e5d5c68 --create-application-cr --links="Build details=https://console.cloud.google.com/cloud-build/builds/3f086b33-4154-4b78-b122-17992e5d5c68?project=chess-wager-test" --output=output
      - prepare
      - --filename=kubernetes/
      - --image=gcr.io/chess-wager-test/github.com/geektechniquestudios/chesswager:$SHORT_SHA
      - --app=chess-wager-backend-server
      - --version=943a8028c89a62402ab38e59e4e1d09847823808
      - --namespace=default
      - --label=
      - --output=output

  # Save configs
  # - name: gcr.io/cloud-builders/gsutil
  #   args: sh -c if [ "chess-wager-test_cloudbuild/deploy" != "" ] then gsutil cp -r output/suggested gs://chess-wager-test_cloudbuild/deploy/config/chess-wager-backend-server/3f086b33-4154-4b78-b122-17992e5d5c68/suggested gsutil cp -r output/expanded gs://chess-wager-test_cloudbuild/deploy/config/chess-wager-backend-server/3f086b33-4154-4b78-b122-17992e5d5c68/expanded fi

  # Apply gke deploy config
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      - apply
      - --filename=output/expanded
      - --location=us-central1-a
      - --cluster=chess-wager-$BRANCH_NAME

  # Test
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "test", "--", "--watchAll=false"]

  # Build
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "build"]

  # Firebase env selection
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["use", "$BRANCH_NAME"]

  # Deploy
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["deploy", "--project=$PROJECT_ID"]

  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["run", "deploy"]
timeout: 1800s
