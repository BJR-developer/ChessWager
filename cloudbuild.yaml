steps:
  # decrypt environment variables
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - decrypt
      - --ciphertext-file=env/.env.$BRANCH_NAME.enc
      - --plaintext-file=.env
      - --location=global
      - --keyring=chess-wager
      - --key=chess-wager-$BRANCH_NAME

  # Install
  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--no-optional", "-f"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "-g", "firebase-tools"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save", "firebase"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save-dev", "hardhat"]

  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "postinstall"]

  # Hardhat deploy contract
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "deploy-contract"]

  # Build backend docker image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/backend-server:$SHORT_SHA", "."]

  # Push backend image
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/backend-server:$SHORT_SHA"]

  #Deploy container image to GKE
  - name: "gcr.io/cloud-builders/gke-deploy"
    args:
      - run
      - --filename=kubernetes/deployment.yaml
      - --image=gcr.io/$PROJECT_ID/backend-server:$SHORT_SHA
      - --location=us-central1-a
      - --cluster=chess-wager-$BRANCH_NAME

  # Test
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "test", "--", "--watchAll=false"]

  # Build
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "build"]

  # Firebase env selection
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["use", "$BRANCH_NAME"]

  # Deploy
  - name: "gcr.io/$PROJECT_ID/firebase"
    args: ["deploy", "--project=$PROJECT_ID"]

  # - name: "gcr.io/cloud-builders/npm"
  #   args: ["run", "deploy"]
timeout: 1800s
