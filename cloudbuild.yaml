steps:
  - id: Decrypting environment variables
    name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - decrypt
      - --ciphertext-file=env/.env.$BRANCH_NAME.enc
      - --plaintext-file=.env
      - --location=global
      - --keyring=chess-wager
      - --key=chess-wager-$BRANCH_NAME
  - id: Installing dependencies for frontend
    name: "gcr.io/cloud-builders/npm"
    args: ["install", "--no-optional", "-f"]
  - id: Installing firebase tools
    name: "gcr.io/cloud-builders/npm"
    args: ["install", "-g", "firebase-tools"]
  - id: Installing firebase
    name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save", "firebase"]
  - id: Installing hardhat
    name: "gcr.io/cloud-builders/npm"
    args: ["install", "--save-dev", "hardhat"]
  - id: Installing firebase functions
    name: "gcr.io/cloud-builders/npm"
    args: ["run", "functions-install"]
  - id: Running tests
    name: "gcr.io/cloud-builders/npm"
    args: ["run", "test", "--", "--watchAll=false"]
  - id: Deploying contract
    name: "gcr.io/cloud-builders/npm"
    args: ["run", "deploy-contract-$BRANCH_NAME"]


  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - '$_CL_IMAGE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - $_CL_DOCKERFILE_NAME
    dir: $_DOCKERFILE_DIR
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_CL_IMAGE_NAME:$COMMIT_SHA'
    id: Push
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      - prepare
      - '--filename=$_CL_K8S_YAML_PATH'
      - '--image=$_CL_IMAGE_NAME:$COMMIT_SHA'
      - '--app=$_CL_K8S_APP_NAME'
      - '--version=$COMMIT_SHA'
      - '--namespace=$_K8S_NAMESPACE'
      - '--label=$_K8S_LABELS'
      - '--annotation=$_K8S_ANNOTATIONS,gcb-build-id=$BUILD_ID'
      - '--create-application-cr'
      - >-
        --links="Build
        details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
      - '--output=output'
    id: Prepare deploy
  - name: gcr.io/cloud-builders/gsutil
    args:
      - '-c'
      - |-
        if [ "$_OUTPUT_BUCKET_PATH" != "" ]
        then
          gsutil cp -r output/suggested gs://$_OUTPUT_BUCKET_PATH/config/$_CL_K8S_APP_NAME/$BUILD_ID/suggested
          gsutil cp -r output/expanded gs://$_OUTPUT_BUCKET_PATH/config/$_CL_K8S_APP_NAME/$BUILD_ID/expanded
        fi
    id: Save configs
    entrypoint: sh
  - name: gcr.io/cloud-builders/gke-deploy
    args:
      - apply
      - '--filename=output/expanded'
      - '--cluster=$_GKE_CLUSTER'
      - '--location=$_GKE_LOCATION'
      - '--namespace=$_K8S_NAMESPACE'
    id: Apply deploy


    
  # - id: Building backend docker image
  #   name: gcr.io/cloud-builders/docker
  #   args:
  #     - build
  #     - "-t"
  #     - "$_IMAGE_NAME:$COMMIT_SHA"
  #     - .
  #     - "-f"
  #     - $_DOCKERFILE_NAME
  #   dir: $_DOCKERFILE_DIR
  # - id: Pushing backend docker image
  #   name: gcr.io/cloud-builders/docker
  #   args:
  #     - push
  #     - "$_IMAGE_NAME:$COMMIT_SHA"
  # - id: Preparing deploy of docker image to kubernetes
  #   name: gcr.io/cloud-builders/gke-deploy
  #   args:
  #     - prepare
  #     - "--filename=$_K8S_YAML_PATH"
  #     - "--image=$_IMAGE_NAME:$COMMIT_SHA"
  #     - "--app=$_K8S_APP_NAME"
  #     - "--version=$COMMIT_SHA"
  #     - "--namespace=$_K8S_NAMESPACE"
  #     - "--label=$_K8S_LABELS"
  #     - "--annotation=$_K8S_ANNOTATIONS,gcb-build-id=$BUILD_ID"
  #     - "--create-application-cr"
  #     - >-
  #       --links="Build
  #       details=https://console.cloud.google.com/cloud-build/builds/$BUILD_ID?project=$PROJECT_ID"
  #     - "--output=output"
  # - id: Saving configuration for kuberenets
  #   name: gcr.io/cloud-builders/gsutil
  #   args:
  #     - "-c"
  #     - |-
  #       if [ "$_OUTPUT_BUCKET_PATH" != "" ]
  #       then
  #         gsutil cp -r output/suggested gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/suggested
  #         gsutil cp -r output/expanded gs://$_OUTPUT_BUCKET_PATH/config/$_K8S_APP_NAME/$BUILD_ID/expanded
  #       fi
  #   entrypoint: sh
  # - id: Appling deployment to kubernetes
  #   name: gcr.io/cloud-builders/gke-deploy
  #   args:
  #     - apply
  #     - "--filename=output/expanded"
  #     - "--cluster=$_GKE_CLUSTER"
  #     - "--location=$_GKE_LOCATION"
  #     - "--namespace=$_K8S_NAMESPACE"

  - id: Building frontend
    name: "gcr.io/cloud-builders/npm"
    args: ["run", "build"]
  - id: Selecting firebase env
    name: "gcr.io/$PROJECT_ID/firebase"
    args: ["use", "$BRANCH_NAME"]
  - id: Deploying to firebase
    name: "gcr.io/$PROJECT_ID/firebase"
    args: ["deploy", "--project=$PROJECT_ID"]
timeout: 1800s
images:
  - "$_IMAGE_NAME:$COMMIT_SHA"
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _GKE_LOCATION: us-central1-a
  _OUTPUT_BUCKET_PATH: chess-wager-${BRANCH_NAME}_cloudbuild/deploy
  _K8S_APP_NAME: chess-wager-backend-server
  _K8S_YAML_PATH: kubernetes/deployment.${BRANCH_NAME}.yaml
  _K8S_LABELS: ""
  _K8S_NAMESPACE: default
  _GKE_CLUSTER: chess-wager-${BRANCH_NAME}-env
  _DOCKERFILE_NAME: Dockerfile
  _DOCKERFILE_DIR: ""
  _IMAGE_NAME: gcr.io/chess-wager-${BRANCH_NAME}/github.com/geektechniquestudios/chesswager
  _K8S_ANNOTATIONS: gcb-trigger-id=cadc893d-609c-495e-af19-81e9da53cdf0
  
  _CL_DOCKERFILE_NAME: Dockerfile.contract-listener
  _CL_IMAGE_NAME: gcr.io/chess-wager-${BRANCH_NAME}/github.com/geektechniquestudios/chesswager-contract-listener
  _CL_K8S_APP_NAME: chess-wager-contract-listener
  _CL_K8S_YAML_PATH: kubernetes/deployment.contract-listener.yaml


tags:
  - gcp-cloud-build-deploy
  - $_K8S_APP_NAME
